adult.df <- read.delim("adult.txt")
levels(adult.df$Species)
class(adult.df$Species)
table(adult.df$Species)
levels(size.df$Species)
table(size.df$Species)
size.df[size.df$Species == "",]
size.df[size.df$Species == "",]
table(size.df$Species)
table(size.df$Species)
table(size.df$Species)
levels(size.df$Species)
tidy()
head(egg.df)
dmodes()
search()
tail(size.df)
tail(size.df)
with(size.df, table(Species, AdultSize, Sex))
with(size.df, table(Species, Sex))
with(egg.df, table(Species, Laid))
with(egg.df, aggregate(Laid ~ Species))
with(egg.df, aggregate(Laid ~ Species), mean)
with(egg.df, aggregate(Laid ~ Species, mean))
summarize(egg.df, "Laid", "Species")
head(adult.df)
head(egg.df)
all.equal(egg.df$Laid, adult.df$Laid)
summarize(egg.df, "Rep", "Species")
with(egg.df, aggregate(Laid ~ Species, mean))
 aggregate(egg.df$Laid ~ egg.df$Species, mean)
 aggregate(Laid ~ Species, mean, data = egg.df)
head(size.df)
 aggregate(AdultSize ~ Species + Sex, mean, data = size.df)
 aggregate(AdultSize ~ Sex + Species, mean, data = size.df)
 aggregate(AdultSize ~ Sex + Species, length, data = size.df)
with( size.df, aggregate(AdultSize ~ Sex + Species, length)
)
with(size.df, aggregate(AdultSize ~ Sex + Species, length))
head(adult.df)
dmodes("neg", 2)
dmodes("glm", 2)
 warnings()
exp(2.4)
log(2.4)
tidy()
exp(1.88)
exp(1.88-2.6791)
args(predict.glm.nb)
coef(emerge.nb)
get.pred()
coef
coefs
names(xx)
xx$coefficients
family
xx$family
xx$y
coefs[-1]+coefs[1]
get.pred()
100 * exp(lin)
 aggregate(Laid ~ Species, mean, data = egg.df)
Q
dmodes()
rm(CO2)
rm(av.dat)
tidy()
levels(adult.df$Species)
get.pred()
get.pred()
names(summary(xx))
(summary(xx))
(summary(xx))$coefficients
summary(xx))$coefficients[,4]
summary(xx)$coefficients[,4]
aggregate(Adults/Laid ~ Species, length, data = adult.df)
aggregate(Adults/Laid ~ Species, length, data = adult.df)[,2]
get.pred()
aggregate(AdultSize ~ Sex + Species, length, data = size.df)
version
aggregate
head(size.df)
fix(size.df)
check.fact(size.df)
head(parasite.df)
parasite.df[with(parasite.df, Laid < 7 & Condition == "Paralysed"),]
parasite.df[with(parasite.df, Laid < 7 & Condition == "Paralysed")][1:5,]
parasite.df[with(parasite.df, Laid < 7 & Condition == "Paralysed")]
parasite.df[with(parasite.df, Laid < 7 & Condition == "Paralysed"),]
parasite.df[with(parasite.df, Laid < 7 & Condition == "Paralysed"),[1:5,]]
parasite.df[with(parasite.df, Laid < 7 & Condition == "Paralysed"),[1:5,]
parasite.df[with(parasite.df, Laid < 7 & Condition == "Paralysed"),][1:5,]
head(egg.df)
dmodes("egg")
with(egg.df, table(Species, Rep))
with(egg2.df, table(Species, Rep))
with(egg.df, table(Species, Rep))
with(egg.df, table( Rep))
with(egg2.df, table( Rep))
dmodes("egg")
with(egg.df, table(Species, Rep))
with(egg2.df, table(Species, Rep))
with(egg2.df, table(Species))
with(egg.df, table(Species))
with(egg2.df, table(Species))
dmodes("egg")
tail(egg.df)
tail(egg2.df)
with(egg2.df, table(Species))
with(egg.df, table(Species))
Q
tidy()
dmodes()
dmodes()
rm(i)
dmodes("df"))
dmodes("df")
tidy()
dmodes("df")
with(egg.df, table(Species))
with(egg2.df, table(Species))
dmodes("df")
tidy()
head(parasite.df)
summarize(parasite.df, "Laid", c("Condition", "Species"))
summarize(paralysed.df, "Laid", "Species")
tidy()
species
levels(paralysed.df$Species)
levels(paralysed.df$Species)
levels(paralysed.df$Species)
table(paralysed.df$Species)
table(paralysed.df$Species)
search()
paralysed.pred
unique(paralysed)
unique(paralysed.pred)
levels(paralysed.df$Species)
unique(paralysed.df$Species)
names(paralysed.pred)
paralysed.pred
head(paralysed.df)
l
tidy()
dmodes("df")
head(size.df)
head(sizeA.df)
levels(sizeA.df$Species)
table(sizeA.df$Species)
table(size.df$Species)
size.df$Species
table(size.df$Species)
dmodes("df")
head(sizeA.df)
size.glmB$coefficients
names(size.glmB)
names(summary(size.glmB))
summary(size.glmB)$coefficients
i
i
summary(size.glmB)$coefficients[ppaste("Species", i), 4]
i
size.fit.df[-1]
tidy()
head(sizeA.df)
i
rm(i)
dmodes()
tidy()
with(sizeA.df, table(Species, Sex))
as.data.frame(with(sizeA.df, table(Species, Sex)))
as.data.table(with(sizeA.df, table(Species, Sex)))
data.table(with(sizeA.df, table(Species, Sex)))
gems("table")
as.matrix(with(sizeA.df, table(Species, Sex)))
as.data.frame(as.matrix(with(sizeA.df, table(Species, Sex))))
help.search("table", "dataframe")
help.search("table")
aa <- with(sizeA.df, table(Species, Sex))
attributes(aa)
attributes(as.matrix(aa))
aa
aa[[1]]
attributes(aa)$class
attributes(aa) <- "matrix"
attributes(aa)$class <- "matrix"
aa
as.data.frame(aa)
prop.test(sex.df[1,], p = .5)
prop.test(as.table(sex.df[1,]), p = .5)
as.table(sex.df[1,])
as.matrix(sex.df[1,])
prop.test(as.matrix(sex.df[1,]), p = .5)
sex.check()
i
test.i$p
names(test.i)
test.i$p.value
sex.check()
sex.check()
sex.check()
sex.check()
tidy()
tidy()
dmodes("df")
tidy()
dmodes("df")
emergence.df <- get.pred() ## Keep
emergence.df
tidy()
plot(paralysed.glm2)
dmodes("glm")
plot(size.glmB)
plot(sexRatio.glm)
plot(paralysed.glm)
plot(paralysed2.glm)
plot(paralysed.glm2)
emergence.df <- get.pred() ## Keep
                        Emerge.pc p.val  N
emergence.df <- get.pred() ## Keep
Toupper
Updown
get.pred()
get.pred(emerge.nb2)
sex.check()
prop.test
hostlong.df <- read.delim("/home/hrapgc/Rstuff/Bioprotection/asha/mastrus/HostLongevity.txt")
check.fact(hostlong.df)
head(nonhostlong.df)
long.fec()
i
xx.i
summary(lm.i)$coefficients
summary(lm.i)$coefficients["MatedYes", 3]
summary(lm.i)$coefficients["MatedYes", 4]
summary(lm.i)$coefficients["MatedYes", 2]
summary(lm.i)$coefficients["MatedYes", 4]
summary(lm.i)$coefficients["Longevity", 4]
)
out
tt
Q
long.fec()
long.fec(nonhostlong.df)
long.size()
names(nonhostlong.df)
long.size()
long.size()
summary(lm.i)$coefficients
i
i
model.tables(lm.i)
summary(lm.i)$coefficients
Q
long.size()
i
long.size()
piy
out
Q
long.size()
 summary(lm.i)$coefficients
i
out
Q
long.size()
long.size()
tidy()
library(help = "Hmisc")
names(nonhostlong.df)
long.diet()
summary(lm.i)$coefficients
levels(hostlong.df$Diet)
tab.means()
names(sum)
sums$call
sum$call
deparse(sum$call)
names(xx)
xx$method
xx$R
Q
ls()
tab.means(long.fec.lm)
ls()
coefs
xx$call
lm(Offspring ~ Longevity/ Diet, data = hostlong.df)
lm(Offspring ~ Diet/ Longevity, data = hostlong.df)
ls()
link
xx$call
deparse(xx$call)
names(xx)
xx$terms
names(xx$terms)
is.list(xx$terms)
class(xx$terms)
terms(xx$terms)
class(terms(xx$terms))
terms(xx$terms)
l
l
terms
xx$terms
names(xx)
xx$rank
xx$effects
xx$call
xx$xlevels
levels(hostlong.df$Diet)
names(xx$xlevels)
xx$xlevels[1]
xx$xlevels[1][1]
class(xx$xlevels)
names(xx$xlevels)
xx$xlevels$Diet[1]
xx$xlevels[[1]][1]
Q
tidy()
long.fec()
o
i
tt
out
long.fec()
names(nonhostlong.df)
args(long.diet)
args(long.size)
nh.long.diet.mat <- long.diet()
traceback()
nh.long.diet.mat <- long.diet()
traceback()
nh.long.diet.mat <- long.diet()
out
xx.i
Q
tidy()
dmodes.f()
args(long.size)
long.fec()
i
out
summary(lm.i)$coefficients
tidy()
round(h.long.diet.mat, 3)
search()
version
find("strwrap")
tidy()
q()
n
find("strwrap")
class(h.long.diet.mat.mn)
long.fec()
out
)
names(t.coefs[, "Estimate"])
means
names(t.coefs)
class(t.coefs)
cbind(out, means, Ps)
Q
long.fec()
tidy()
long.fec()
out
Q
long.fec()
tidy()
long.fec()
round(nh.long.size.mat,4)
round(nh.long.diet.mat, 4)
round(nh.long.diet.mat, 6)
round(nh.long.diet.mat, 16)
nh.long.diet.mat
round(nh.long.size.mat, 4)
tidy()
dmodes()
rm(i)
tidy()
check.fact(examine.df)
head(preContact.df)
with(examine.df, table(Lifestage))
with(examine.df, table(Lifestage, Species))
with(examine.df, table(Species, Lifestage))
observe()
observe()
head(xxx)
Q
observe()
head(xxx)
dmodes("df")
Q
observe()
observe()
names(examine.df)
observe()
observe()
out
out
out
out
Q
observe()
observe("preContact")
tidy()
tidy()
observe("preContact")
tidy()
observe()
observe()
observe()
traceback()
observe()
observe()
observe()
observe()
observe()
observe()
  species <- sort(unique(xxx$Species))
  species <- sort(unique(xx$Species))
unique(xx$Species)
)
aa
Q
observe()
sort(unique(aa$Species))
Q
observe()
tidy()
examineOut.df
tidy()
tidy()
x
xx
tidy()
dmodes()
observeC()
Q
observeC()
tidy()
dmodes(,,8)
q()
n
dmodes()
dmodes.f()
dmodes("df")
long.dietnonhostlong.df
dim(nonhostlong.df)
head(nonhostlong.df)
check.fact(nonhostlong.df)
head
levels(nonhostlong.df$Diet)
aa <- ipsofactor(nonhostlong.df$Diet)
levels(aa)
long.diet2()
tidy()
round(long.diet2(), 4)
long.fec2(()
long.fec2()
long.fec2()
long.fec()
long.fec2()
dmodes.f()
long.size()
long.size2()
plot.long.size2()
plot.long.size2()
dmodes(,,12)
rm(aa)
long.size2()
tidy()
long.size2()
head(hostlong.df)
long.fec2()
i
summary(lm.i)
summary(lm.i)
out
dmodes("df")
head(hostlong.df)
tail(hostlong.df)
df.summary(hostlong.df, "Offspring", c("Diet", "Mated"))
i
long.fec2()
summary(lm.t)
df.summary(hostlong.df, "Offspring", c("Diet", "Mated"))
df.summary(hostlong.df, "Size", c("Diet", "Mated"))
df.summary(hostlong.df, "Longevity", c("Diet", "Mated"))
df.summary(hostlong.df, "Longevity", c("Mated", "Diet"))
long.fec2()
out
dim(t.coefs)
dim(l.coefs)
out
Q
long.fec2()
traceback()
long.fec2()
tt
out
Q
long.fec2()
long.fec2()
long.fec2()
out
Q
long.fec2()
tidy()
getwd()
dmodes()
q()
n
dmodes()
dmodes.f()
prop.test
dmodes.f()
dmodes()
preContact.out.df
dmodes("observe")
observeD
require(sos)
findFn("Tukey")
install.packages("multcompView")
require(multcompView)
search()
dmodes(,2)
observeD()
form
 multcompLetters(yy.tuk$treatments[,4])
 multcompLetters(yy.tuk$treatments)
yy.tuk$treatments
names(yy.tuk)
names(yy.tuk$Species)
class(yy.tuk$Species)
yy.tuk$Species
dim(yy.tuk$Species)
colnames(yy.tuk$Species)
yy.tuk$Species[,4]
multcompLetters(yy.tuk$Species[,4])
out
summary(yy.lm)$coefficients
summary(yy.aov)$coefficients
summary(yy.aov)
dim(xxx)
xxx
Q
tidy()
observeD()
model.tables(yy.aov, type = "means", se = TRUE)
round(newStart(coefs[,"Estimate"]), 4)
model.tables(yy.aov, type = "means")
ls()
head(xxx)
table(xxx$Species)
contrasts(xxx$Species)
se.contrast(yy.aov, contrasts(xxx$Species))
out
tuk.letters[rownames(out)]
rownames(out)
observeD()
rownames(out)
tuk.letters[rownames(out)]
tuk.letters[rownames(out)]
rownames(out)
tuk.letters
class(tuk.letters)
c(tuk.letters)
tuk.letters[[1]]
tuk.letters[[1]][rownames(out)]
class(yy.tuk$Species)
se.contrast(yy.aov, contrasts(xxx$Species))
summary(yy.lm)
out
head(xxx)
table(xxx$Species)
max(table(xxx$Species))
min(table(xxx$Species))
plot(yy.tuk)
Q
tidy()
dmodes.f()
252.15/179
pt(q = -3.038, df=101)
pt(q = -2.335, df=101)
pt(q = -2.335, df=101)*2
pt(q = -2.335, df=101, lower.tail  = TRUE)
pt(q = -2.335, df=101, lower.tail  = FALSE)
pt(q = -2.335, df=101, lower.tail  = FALSE)
-0.169841/0.072733
pt(q = -2.33513, df=101, lower.tail  = FALSE)
pt(q = -2.33513, df=101)
pt(q = -2.33513, df=101)*2
pt(q = -0.398413/0.131122, df=101)*2
pt(q = -0.398413/0.131122, df=91)*2
pt(q = -0.360177/0.049895, df=91)*2
pt(q = -0.360177/0.049895, df=101)*2
get.pred(emerge.nb2)
dmodes()
dmodes("emer")
q()
n
dmodes(,,15)
summary(emerge.nb)
dmodes(,,15)
dmodes("df")
om.df
emergence.df
Emergence.df
emergence.df
find("TukeyHSD")
  #  "greater"), conf.level = 0.95, correct = TRUE
61*13
8/13
prop.test(8, 13)
prop.test(c(8, 30), c(13, 30))
prop.test(c(30, 8), c(30, 13))
.29*31
prop.test(c(30, 8,9), c(30, 13,31))
prop.test(c(30, 9), c(30, 31))
prop.test(c(30, 8), c(30, 13))
prop.test(c(30, 9), c(30, 31))
dmodes()
dmodes()
summary(Emerge.nb)
dmodes(,,4)
comment(Adult.df) <- comment(Emerge.nb) <- comment(Emergence.df) <- "20/12/2012"
observe()
ls()
Q
observeB()
Q
pt(.75, 50)
pt(.75, 50:60)
pt(.75, 5:6)
31*77
31*77/100
53819
53*19
prop.test(c(10, 19), c(24, 31))
39*31/100
prop.test(c(10, 19), c(12, 31))
21*19
prop.test(c(4, 19), c(9, 31))
43*21/100
14*21/100
5*21/100
prop.test(c(9, 21), c(24, 31))
prop.test(c(12, 31), c(3, 21))
prop.test(c(12, 31), c(3, 21))
prop.test(c(9, 21), c(24, 31))
prop.test(c(12, 31), c(3, 21))
prop.test(c(12, 31), c(3, 21))
prop.test(c(9, 21), c(24, 31))
prop.test(c(4, 19), c(9, 31))
prop.test(c(4, 19), c(9, 31))
prop.test(c(9, 21), c(7, 31))
prop.test(c(9, 21), c(22, 31))
prop.test(c(3, 21), c(12, 31))
prop.test(c(1, 21), c(9, 31))
fisher.test(c(1, 21), c(9, 31))
fisher.test(c(3, 21), c(12, 31))
fisher.test(c(10, 19), c(12, 31))
fisher.test(c(3, 21), c(12, 31))
fisher.test(rbind(c(3, 21), c(12, 31)))
prop.test(c(3, 21), c(12, 31))
0.6774194/0.2500000
0.0/6774194.2500000
0.6774194/0.2500000
(0.6774194/0.2500000)^-1
fisher.test(rbind(c(3, 21), c(12, 31)))
dmodes()
13.992
prop.test(c(3, 21), c(12, 31))
fisher.test(rbind(c(3, 21), c(12, 31)))
fisher.test(cbind(c(3, 21), c(12, 31)))
fisher.test(cbind(c(3, 21-3), c(12, 31-12)))
fisher.test(cbind(c(24, 31-24), c(10, 19-10)))
fish()
fish()
fish()
fisher.test(cbind(c(3, 21-3), c(12, 31-12)))
fisher.test(cbind(c(3, 21-3), c(12, 31-12)))
.92*13
.29*31
.31*c(77,39,2910,10)
round(.31*c(77,39,2910,10))
round(.31*c(77,39,29,10,10))
tidy()
fish(30,30,4,19)
fish(30,30,19,4)
no.df
fish(30,30,4,19)
fish(30,30,15,19)
names(fish(30,30,15,19))
fish(30,30,15,19)$p.value
fish(30,30,4,19)$p.value
fish(30,30,4,19)
fish(30,30,29,31)
no.df
fish(30,30,4,19)
fish(30,30,9,31)
fish(30,30,9,31)
fish(30,30,31,9)
fish(30,31,30,9)
fish()
fish(31,30,9,30)
two.fish()
x[x$Species %in% c(one, two), c("Mridens", response)]
x
fish(30, 13, 30, 8)
unlist(x.use)
c(unlist(x.use))
fish(unlist(x.use))
fish(asunlist(x.use))
Q
fish()
two.fish()
fish(unlist(x.use))
Q
two.fish(x = no.df, one = "Argyroploce chlorosaris", two = "Cydia pomonella",
    response = "Ovipositor")
names(x)
Q
two.fish(x = no.df, one = "Argyroploce chlorosaris", two = "Cydia pomonella")
response
Q
two.fish(x = no.df, one = "Argyroploce chlorosaris", two = "Cydia pomonella")
two.fish(x = no.df, one = "Argyroploce chlorosaris", two = "Cydia pomonella")
two.fish(x = no.df, one = "Argyroploce chlorosaris", two = "Cydia pomonella")
numeric(letters)
numeric(length(letters))
two.fish(x = no.df, one = "Argyroploce chlorosaris", two = "Cydia pomonella")
two.fish(x = no.df, one = "Argyroploce chlorosaris", two = "Cydia pomonella")
no.df
no.df
tidy()
observeB()
observeB()
ls()
anova(yy.lm)
pf(17.05, 7, 97, ncp, lower.tail = TRUE, log.p = FALSE)
pf(17.05, 7, 97)
1 - pf(17.05, 7, 97)
pt(.75, df = 1:30)
1 - pt(.75, df = 1:30)
2 * (1 - pt(.75, df = 1:30))
2 * (1 - pt(.75, df = 31:60))
round(2 * (1 - pt(.75, df = 31:60)), 3)
round(2 * (1 - pt(.75, df = 31:120)), 3)
coefs
round(2 * (1 - pt(.7499048, df = 31:120)), 3)
round(2 * (1 - pt(.7499048, df = 31:120)), 4)
round(2 * (1 - pt(.1600, df = 31:120)), 4)
round(2 * (1 - pt(.1900, df = 31:120)), 4)
round( (1 - pt(.1900, df = 31:120)), 4)
round( (pt(.1900, df = 31:120)), 4)
coefs
round( (pt(1.415, df = 7)), 4)
round( (pt(1.415, df = 1:55)), 4)
round( (pt(.7499, df = 1:55)), 4)
round( (pt(1.899, df = 1:55)), 4)
1-round( (pt(1.899, df = 1:55)), 4)
coefs
1-round( (pt(2.1116605, df = 1:55)), 4)
1-round( (pt(0.2916445, df = 1:55)), 4)
out
names(xxx)
table(xxx$Species)
version
1-round( (pt(0.2916445, df = 1:55)), 4)
coefs
1-round(7.7295993 (pt(, df = 1:55)), 4)
1-round(7.7295993, (pt(, df = 1:55)), 4)
1-round( (pt(7.7295993, df = 1:55)), 4)
round( (pt(7.7295993, df = 1:55)), 4)
1-round( (pt(7.7295993, df = 1:55)), 5)
1-round( (pt(0.3239488, df = 1:55)), 5)
1-round( (pt(-0.3239488, df = 1:55)), 5)
summary.lm
coefs
2*pt(abs(coefs$`t value`)
)
coefs$`t value`
coefs[["t value"]]
names(coefs)
dimnames(coefs)
coefs[[2]]$`t value`
coefs[[2]]
coefs[2]
class(coefs)
coefs[,`t value`]
coefs
as.data.frame(coefs)
bb <- as.data.frame(coefs)
bb
names(bb)
bb[["t value"]]
2 * pt(abs(bb[["t value"]]))
2 * pt(abs(bb[["t value"]]),7)
2 * pt(abs(bb[["t value"]]),17)
abs(bb[["t value"]])
ls()
yy.lm$rdf
names(yy.lm)
yy.lm$df.residual
2 * pt(abs(bb[["t value"]]),97)
2 * pt(abs(bb[["t value"]]),97,lower.tail = FALSE)
coef
coefs
Q
no.df
ls()
coefs
Q
coefs
ls()
yy.lm$resid.df
names(yy.lm)
yy.lm$df.residual
Q
yy.lm$df.residual
coefs
Q
observeC("preContact")
coefs
yy.lm$df.residual
Q
yy.lm$df.residual
coefs
dmodes()
tidy()
no.df
help.search(multcompLetters)
help.search("multcompLetters")
getwd()
dmodes()
head(devel.df)
check.fact(devel.df)
sapply(devel.df, class)
levels(devel.df$TempNom)
model.means(length.lm)
model.tables(length.lm)
model.tables(length.aov)
model.tables(length.aov)
model.tables(length.aov, type = "response", se = TRUE)
model.tables(length.aov, type = "means", se = TRUE)
length.lm <- lm(Length~ TempNom , data = devel.df)
anova(length.lm)
length.lm <- lm(Length~ TempNom , data = devel.df)
anova(length.lm)
head(devel.df)
?aggregate
plot.develop()
dmodes()
q()
Q
junk.df
find("junk.df")
search()
junk.df <- junk.df[-3:12]
junk.df <- junk.df[-(3:12)]
junk.df
find("junk.df")
rm(junk.df)
junk.df
find("junk.df")
q()
c
junk.df <- junk.df[-3:12]
junk.df <- junk.df[-0:12]
junk.df <- junk.df[-0:2]
junk.df
junk.df <- junk.df[-1:2]
rm(junk.df)
junk.df <- junk.df[-1:2]
junk.df <- junk.df[-0:2]
junk.df
rm(junk.df)
junk.df
rm(junk.df)
dmodes()
fish()
fish(c(31, 24, 19, 10))
two.fish()
fish(c(30, 13, 30, 8))
fish(c(17,13, 2, 10))
Convictions <-
     matrix(c(2, 10, 15, 3),
            nrow = 2,
            dimnames =
            list(c("Dizygotic", "Monozygotic"),
                 c("Convicted", "Not convicted")))
fisher.test(Convictions)
fish(c(17,13, 2, 10))
fisher.test(Convictions)$p.value
fish(c(17,13, 2, 10))
a
b
cbind(c(a, a-x), c(b, b-y))
cbind(c(x, a-x), c(y, b-y))
two.fish()
date()
date()
tidy()
dmodes.f()
head(devel.df)
tail(devel.df)
search()
plot.develop()
summarize(xx, 3, 1:2)
head(xx)
summarize(xx, "Days", 1:2)
summarize(xx, "Days", 3:2)
summarize(xx, "Days", c(1, 3))
summarize(xx, "Days", c(3, 1))
summarize(xx, "Days", c(3, 1))
summarize(xx, "Days", c(1, 3))
bwplot(Sex~ Days | TempNom , data = xx)
bwplot(TempNom~ Days | Sex , data = xx)
methods("predict")
getwd()
Q
q()
y
plot.develop()
bwplot(TempNom~ Days | Sex , data = xx)
bwplot(TempNom~ Days | Sex , data = xx)
predict(length.lm, new.df, se.fit = TRUE)
Q
plot.develop()
cbind(new2.df, (pred2[1:2]))
cbind(new2.df, round(pred2[1:2], 3))
cbind(new2.df, as.data.frame(pred2[1:2]))
cbind(new2.df, round(as.data.frame(pred2[1:2]), 3))
levels(xx$Sex)
unique(xx$Sex)
names(xx)
head(xx)
with(xx, plot(TempNom, TempRecord))
abline(0,1)
abline(1,0)
abline(a = 0, b = 1, h = NULL, v = NULL, reg = NULL)
plot(1:10)
plot(1:10)
abline(0,1)
with(xx, plot(fact2num(TempNom), TempRecord))
abline(0,1)
table(xx$Days)
table(1/xx$Days)
table(xx$Days)
with(xx, table(Days, TempNom))
with(xx, table(TempNom))
with(xx, table(TempNom, Sex))
unique(xx[, 1:3])
unique(xx[, 3:1])
check.fact(unique(xx[, 3:1]))
arrange(unique(xx[, 3:1]), Sex, TempNom, TempRecord)
search()
arrange(unique(xx[, 3:1]), Sex, TempNom, TempRecord)
arrange(unique(xx[, 3:1]), Sex, TempNom, TempRecord)
arrange(unique(xx[, 3:1]), Sex, TempNom, TempRecord)
arrange(unique(xx[, 3:1]), Sex, TempRecord, TempNom)
arrange(unique(xx[, 3:1]), TempRecord, Sex, TempNom)
arrange(unique(xx[, 3:1]), Sex, TempRecord, TempNom)
arrange(unique(xx[, 3:1]), Sex, TempRecord, TempNom)[, c(1,3,2)]
unique(new.df[, 2:3])
aaa<-paste0("a", 1:20)
bbb<-paste0("b", 101:120)
ab<-paste0(aaa,bbb)
ab
strsplit(ab, "[ab]")
as.data.frame(strsplit(ab, "[ab]"))
sapply(ab.l, "[", 1)
sapply(ab.l, "[", 3)
sapply(ab.l, "[", 2)
as.data.frame(unlist(str_extract_all(ab, ptrn)))
t(unlist(str_extract_all(ab, ptrn)))
hhh
Q
tidy()
plot.develop()
plot.develop()
arrange(unique(xx[, 3:1]), Sex, TempRecord, TempNom)
arrange(unique(xx[, 3:1]), Sex, TempRecord, TempNom)
check.fact(new.df)
len.pred$fit
head(xx)
dim(xx)
head(xx)
head(xx)
traceback()
Loblolly
dim(xx)
head(xx)
?SSlogis
plot.develop()
head(xx)
coef(rate.nls)
Q
plot.develop()
names(predM)
predM
plot(newdat$T, predM, type = "l")
abline(h = coef(rate.nlsM)["Tmax"], col = "grey")
coef(rate.nlsM)["Tmax"]
abline(v = coef(rate.nlsM)["Tmax"], col = "grey")
head(xx)
with(use.df, T[F == max(F, na.rm = TRUE)])
na.omit(with(use.df, T[F == max(F, na.rm = TRUE)]))
na.omit(with(use.df, T[F == max(F, na.rm = TRUE)]))[1]
summary(xxM$Days)
summary(xxF$Days)
summary(xxF$Dev)
summary(xxM$Dev)
coef(lmM)
clipline()
within(new.df, Length <- predict(update(length.lm, . ~. -Sex), new.df))
Q
colours()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
ls()
range(xx$TempRecord)
range(xx$TempRecord[xx$TempRecord < 27])
plot.develop()
plot.develop()
plot.develop()
with(coef(rate.nlsM), rho * Tmax)
rate.nlsM["rho"]*rate.nlsM["Tmax"]
rate.nlsM["Tmax"] 
class(coef(rate.nlsM))
rate.nlsM["Tmax"] 
31.575341019*0.150644093
exp(0.015)
coef(rate.nlsM)[1]
coef(rate.nlsM)["rho"]
coef(rate.nlsM)["Tmax"]
coef(rate.nlsM)["Tmax"]*coef(rate.nlsM)["rho"]
coefM.ls <- as.list(coef(rate.nlsM))
with(coefM.ls, rho * Tmax)
with(coefM.ls, rho * Tmax)
plot.develop()
plot.develop()
plot.develop(post = FALSE)
ls()
unlist(coefF)
with(coefF, (rho - 1/del))
with(coefF, Tmax)
with(coefF, lam)
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop(post = FALSE)
head(use.df)
head(use.df, 22)
tail(use.df, 22)
with(use.df, summary(F))
T
F
T == T
F == F
unclass(coefF)
coefF
unclass(coefM)
unlist(coefM)
unlist(coefF)
Fline
head(newdat)
dim(newdat)
dim(use.df)
use.df[600:620,]
use.df[600:620,]
use.df[600:620,]
use.df[600:620,]
use.df[600:620,]
use.df[600:620,]
use.df[600:620,]
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop(rnd = 4)
plot.develop(rnd = 6)
plot.develop(rnd = 6)
plot.develop(rnd = 6)
tidy()
dmodes.f()
long.fec()
get.pred()
head(adult.df)
tail(adult.df)
get.pred()
emerge.nb
head(adult.df)
comment(emerge.nb)
anova(emerge.nb, test = "Chi")
comment(emergence.df)
summary(emerge.nb2)
anova(emerge.nb2)
pt(.884, 5)
1- pt(.884, 5)
1- pt(.884, 5, lower.tail = TRUE)
1- pt(.884, 5, lower.tail = FALSE)
1- pt(.884, 5:10, lower.tail = FALSE)
1- pt(.884, 5, lower.tail = FALSE)
summary(emerge.nb2)
1- pt(.884, 31, lower.tail = FALSE)
1- pt( 2.438, 31, lower.tail = FALSE)
1- pt( 2.438, 31)
1- pt( 2.438, 30)
1- pt( 2.438, 10:30)
1- pt( 2.438, 10:30, lower.tail = FALSE)
pt( 2.438, 10:30, lower.tail = FALSE)
pt(0.7743/0.3176 , 10:30, lower.tail = FALSE)
pt(0.7743/0.3176/1.354392 , 10:30, lower.tail = FALSE)
summary(emerge.nb2)
0.7743/0.3176
pt(0.7743/0.3176/1.354392 , 10:30, lower.tail = FALSE)
pt(0.7743/0.3176/1.354392 , 10:30)
pt(0.7743/0.3176*1.354392 , 10:30)
1-pt(0.7743/0.3176*1.354392 , 10:30)
1-pt(0.7743/0.3176/1.354392 , 10:30)
round(1-pt(0.7743/0.3176/1.354392 , 10:30), 4)
summary(emerge.nb2)
round(1-pt(0.7743*1.354392/0.3176 , 10:30), 4)
round(1-pt(6.965 , 10:30), 4)
pt(6.965 , 10:30)
qt(.95, df=1)
qt(.95, df=1)
qt(.95, df=1:30)
summary(emerge.nb2)
qt(2.438, df=1:30)
qt(0.016335, df=1:30)
cbind(1:30,qt(0.016335, df=1:30)
)
cbind(1:30,qt(0.016335/1.354392, df=1:30))
cbind(10:35,qt(0.016335/1.354392, df=10:35))
summary(emerge.nb2)
(1/ (1/30 + 1/32))
(1/ (1/30 + 1/5))
cbind(10:35,qt(0.016335/1.354392, df=4.285714)
)
qt(0.016335/1.354392, df=4.285714)
qt(0.016335/1.354392, df=28.5714)
qt(0.016335/1.354392, df=28.5)
pt(2.438, 29)
pt(-2.438, 29)
pt(-2.438, 20:33)
qt(.95, df=1:30)
pt(qt(.95, df=1:30), 1:30)
pt(qt(.95, df=1:30), 10:40)
(1/ (1/31 + 1/32))
qt(0.016335/1.354392, df=15.74603)
coefficients(summary(emerge.nb2))
qt(0.016335, df=15.74603)/1.354392
qt(0.016335, df=15.74603)*1.354392
qt(0.016335, df=15.74603)
qt(.95, df=1:30)
qt(1-.95, df=1:30)
pt(-1.697261, 30)
pt(-1.697261, 20)
pt(-2.4378097, 20)
pt(-2.4378097, 30)
pt(-2.4378097, 15.74603)
round(pt(-2.4378097, 1:35), 4)
round(pt(-2.4378097/1.354392, 1:35), 4)
round(pt(-2.4378097*1.354392, 1:35), 4)
round(pt(-2.4378097, 1:35), 4)
round(pt(-2.4378097, 1:35), 4)/1.354392
round(pt(-2.4378097, 1:35), 4)
round(pt(-2.4378097, 1:35), 5)
coefficients(summary(emerge.nb2))
round(pt(-2.4378097, 11), 5)
round(pt(-2.4378097, 15), 5)
(1/31 + 1/30)^-1
round(pt(-2.4378097, 15.26), 5)
round(pt(-2.4378097/1.354392, 15.26), 5)
round(pt(-2.4378097/1.354392, 30), 5)
summary(emerge.nb2)
round(pt(-2.4378097, 113), 5)
round(pt(-2.4378097/1.354392, 113), 5)
round(pt(-2.4378097*1.354392, 113), 5)
round(pt(-2.4378097, 113)/1.354392, 5)
round(pt(-2.4378097, 113)*1.354392, 5)
round(pt(-2.4378097, 13)*1.354392, 5)
round(pt(-2.4378097, 31)*1.354392, 5)
round(pt(-2.4378097, 31)/1.354392, 5)
round(pt(-2.4378097/1.354392, 31), 5)
round(pt(-2.4378097*1.354392, 31), 5)
coefficients(summary(emerge.nb2))
round(pt(-2.4378097/1.354392, 113), 5)
round(pt(-2.4378097*1.354392, 113), 5)
round(pt(-2.4378097, 113), 5)
round(pt(-2.4378097, 113), 5)/1.633499e-02
round(pt(-2.4378097, 113), 5)*2
round(pt(-0.8842851, 113), 5)*2
coefficients(summary(emerge.nb2))[3]
coefficients(summary(emerge.nb2))[,3]
2*pt(coefficients(summary(emerge.nb2))[,3], 113)
names(summary(emerge.nb2))
summary(emerge.nb2)$df
coefficients(summary(emerge.nb2))
methods(summary)
emerge.nb
get.pred(emerge.nb)
get.pred(emerge.nb2)
Emergence.df
emergence.df
get.pred13()
xx$df
names(xx)
names(summary(xx))
summary(xx)$df
summary(xx)$df[2]
summary(xx)
coefficients(summary(glm.nb(Adults/Laid ~ Species, weights = Laid, data = adult.df)))
require(MASS)
coefficients(summary(glm.nb(Adults/Laid ~ Species, weights = Laid, data = adult.df)))
coefficients(summary(emerge.nb))
coefficients(summary(emerge.nb2))
Q
coefficients(summary(emerge.nb2))
get.pred(emerge.nb2)
get.pred(emerge.nb2)
dmodes(,,9)
get.pred(emerge.nb2)
get.pred(emerge.nb)
emerge.nb2.13 <- glm.nb(Adults ~ Species + offset(log(Laid)), data = adult.df)
get.pred(emerge.nb2.13)
coefficients(summary(emerge.nb2.13))
get.pred(emerge.nb)
q()
n
require(MASS)
Emergence.df
2*pt(coefficients(summary(emerge.nb2))[,3], 113)
coefficients(summary(emerge.nb2))
coefficients(summary(emerge.nb))
2*pt(coefficients(summary(emerge.nb))[,3], 113)
2*pnorm(coefficients(summary(emerge.nb))[,3])
version
get.pred13()
summary(xx)
summary(xx)$df
summary(xx)
get.pred13()
search()
require(datasets)
check.nb()
Q
get.pred13()
Q
get.pred13()
get.pred13()
dev.off()
get.pred13()
tidy()
dmodes(,,9)
exp(-55)
exp(55)
summary(size.glmB)$df
q()
n
tidy()
dmodes(,,9)
rm(i)
tidy()
dmodes(,,9)
summary(paralysed.glm2)
Paralysed.df
Paralysed.df
Paralysed.df
Paralysed.df
2.250000/0.4621036
get.pred13()
search()
get.pred13()
summary(size.glmB)$df
get.pred13()
search()
tidy()
sex.check()
fish(62, 31, 100, 50)
fish(c(62, 31, 100, 50))
fish(c(62, 100, 31, 50))
fish(c(15, 100, 7, 50))
fish(c(3, 100, 3, 50))
fish(c(17, 100, 2, 50))
fish(c(2, 100, 2, 50))
fish(c(7, 100, 2, 50))
sex.check()
sex.check()
Q
sex.check()
sex.check()
c(fish.i)
xx[i,1]
Q
sex.check()
dmodes(,,15)
rm(rs)
tidy()
dmodes(,,15)
tidy()
dmodes(,,15)
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop(post = FALSE)
Q
plot.develop(post = FALSE)
plot.develop(post = FALSE)
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
ls()
D(formF)
D(formF, "T")
D(e^(0.149799 * T) - e^(0.149992 * T - 0.0061505) - 0.009515, "T")
D(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del))
D(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T")
D(exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T")
with(codfF, D(exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
with(coefF, D(exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
with(coefM, D(exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
with(coefM, deriv(exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
with(coefM, deriv3(exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
with(coefM, deriv3(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
derM <- with(coefM, deriv3(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
derF <- with(coefF, deriv3(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del), "T"))
derF <- with(coefF, deriv3(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del) + lam, "T"))
derF <- with(coefF, deriv3(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del) + lam, "T"))
Browse[1]> derF
expression({
    .expr2 <- exp(rho * T)
    .expr7 <- exp(rho * Tmax - (Tmax - T)/del)
    .expr10 <- .expr2 * rho
    .expr11 <- 1/del
    .expr12 <- .expr7 * .expr11
    .value <- .expr2 - .expr7 + lam
    .grad <- array(0, c(length(.value), 1L), list(NULL, c("T")))
    .hessian <- array(0, c(length(.value), 1L, 1L), list(NULL, 
        c("T"), c("T")))
    .grad[, "T"] <- .expr10 - .expr12
    .hessian[, "T", "T"] <- .expr10 * rho - .expr12 * .expr11
    attr(.value, "gradient") <- .grad
    attr(.value, "hessian") <- .hessian
    .value
})
Browse[1]> derM
derM
derF
all.equal(derF, derM)
mode(derF)
T
T <-  25
eval(derF)
with(coefF,eval(derF))
T <-  seq(24, 26, .001)
with(coefF,eval(derF))
T <-  seq(24, 26, .1)
T
with(coefF,eval(derF))
class(with(coefF,eval(derF)))
is.list(with(coefF,eval(derF)))
attributes(with(coefF,eval(derF)))
derF <- with(coefF, deriv3(~ exp(rho * T) - exp(rho*Tmax - (Tmax - T)/del) + lam, "T"))
Browse[1]> derF
expression({
    .expr2 <- exp(rho * T)
    .expr7 <- exp(rho * Tmax - (Tmax - T)/del)
    .expr10 <- .expr2 * rho
    .expr11 <- 1/del
    .expr12 <- .expr7 * .expr11
    .value <- .expr2 - .expr7 + lam
    .grad <- array(0, c(length(.value), 1L), list(NULL, c("T")))
    .hessian <- array(0, c(length(.value), 1L, 1L), list(NULL, 
        c("T"), c("T")))
    .grad[, "T"] <- .expr10 - .expr12
    .hessian[, "T", "T"] <- .expr10 * rho - .expr12 * .expr11
    attr(.value, "gradient") <- .grad
    attr(.value, "hessian") <- .hessian
    .value
})
Browse[1]> 
T
names(slopeF)
class(slopeF)
summary(slopeF)
boxplot(slopeF)
length(slopeF)
length(T)
plot(T, slopeF)
dev.off()
plot(T, slopeF)
plot(T, slopeF)
pbinom(0, 15, .5)
pbinom(0:15, 15, .5)
cbind(0:15, pbinom(0:15, 15, .5))
cbind(1:15, diff(pbinom(0:15, 15, .5)))
hh
gradient(slopeF)
slopeF[["gradient"]]
comment(slopeF)
attributes(derF)
eval(derF)
attributes(slopeF)
attributes(slopeF)$gradient
summary(attributes(slopeF)$gradient)
cbind(T, attributes(slopeF)$gradient)
dimnames(cbind(T, attributes(slopeF)$gradient))
dbinom(15, 0:15, .5)
dbinom(15, 1, .5)
attributes(gradientM)$gradient
cbind(T, gradientF, gradientM)
cbind(T, gradientF, gradientM)
ls()
coefM["Tmax"]
coefF["Tmax"]
round(c(FassyT), 2)
Q
plot.develop(post = FALSE)
plot.develop()
plot.develop()
tidy()
plot.develop()
plot.develop()
plot.develop()
plot.develop(, FALSE)
count.nas(use.df)
dim(use.df)
with(use.df, na.omit(F)[1])
with(use.df, T[na.omit(F)[1]])
with(use.df, T[na.omit(F)][1])
with(use.df, T[!is.na(F)][1])
with(use.df, T[!is.na(M)][1])
names(rate.nlsM)
resid(rate.nlsM)
summary(resid(rate.nlsM))
rms(resid(rate.nlsM))
rms(resid(rate.nlsF))
coefM
unlist(coefM)
rms(resid(rate.nlsF))
rms(resid(rate.nlsM))
rms(resid(rate.nlsM2))
rms(resid(rate.nlsF))
rms(resid(rate.nlsF2))
unlist(coefM)
unlist(coefM2)
unlist(coefients(rate.nlsF2))
unlist(coeffients(rate.nlsF2))
unlist(coef(rate.nlsF2))
unlist(coef(rate.nlsF))
unlist(coef(rate.nlsM))
unlist(coef(rate.nlsM2))
rms(resid(rate.nlsF2))
summary(resid(rate.nlsF))
summary(resid(rate.nlsF2))
with(use.df, T[!is.na(M)][1])
with(use.df, T[!is.na(F)][1])
dim(newdat)
Q
plot.develop(, FALSE)
head(use.df)
ls()
0.002694/0.018693
0.018693/ 0.002694
Q
plot.develop()
plot.develop()
plot.develop()
plot.develop()
plot.develop()
rm(idy, idx)
plot.develop()
plot.develop()
plot.develop()
plot.develop(,,,TRUE)
plot.develop(,,,TRUE)
dim(use.df)
use.df[1200:1220,]
use.df[900:920,]
use.df[600:620,]
use.df[1200:1220,]
plot.develop(,,8,TRUE)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
find("fisher.test")
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
unlist(coefM)
Q
plot.develop(,,7)
unlist(coefM)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
tidy()
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
Q
plot.develop(,,7)
plot.develop(,,7)
T
F
rm(T)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
paste("Temperature (", expression("" *degree), "C)")
plot.develop(,,7)
expression(paste(Temperature, "(", *degree, "C)"))
expression(paste(Temperature, "(", ~*degree, "C)"))
substitute(paste(T *degree, K), list(T = "Temperature (", K = "C)"))
substitute(paste(T *degree K), list(T = "Temperature (", K = "C)"))
expression(paste(Temperature ( *degree, "C)")))
expression(paste(Temperature ,( *degree, "C)")))
expression(paste(41 * degree, " S"), paste(40 * degree, " ", 30 *
minute), 40 * degree))

expression(paste(41 * degree, " S"), paste(40 * degree, " ", 30 *
minute), 40 * degree)

expression(paste(Temperature "(", *degree, "C)"))

expression(paste(Temperature, "(", *degree, "C)"))
expression(paste(Temperature *degree, "C)"))
plot.develop(,,7)
plot.develop(,,7)
plot.develop(,,7)
expression(paste(Temperature (, *degree, "C)")))
expression(paste(Temperature (,*degree, "C)")))
expression(paste(Temperature ,*degree, "C)")))
expression(paste(Temperature *degree, "C)")))
expression(paste(Temperature *degree, "C)"))
expression(paste(Temperature *degree, "C"))
expression(Temperature *degree ~ C)
expression(Temperature ~ *degree C)
expression(Temperature *degree C)
expression(Temperature *degree ~ C)
plot(1:10, 1;10)
plot(1:10, 1:10)
plot(1:10, 1:10, pch = "")
text(2, 8, expression(Temperature *degree ~ C))
text(6, 8, expression(Temperature *degree ~ C))
text(6, 7, substitute(paste(Temperature, B * degree, "C)"), list(B = " (")))
text(6, 9, expression(Temperature *degree  C))
plot.develop(,,7)
expression(Temperature~(degree*C))
text(6, 9, expression(Temperature~(degree*C)))
plot.develop(,,7)
getwd()
plot.develop(,,7)
plot.develop2()
plot.develop2()
0.1506441 -  1/6.6290105
1/6.6290105
31.575341 81506441 -  1/6.6290105)
0.1506441 -  1/6.6290105
31.575341 * (0.1506441 -  1/6.6290105)
31.575341 * (0.1506441 -  1/6.6290105) ¡Ý0.0098855
31.575341 * (0.1506441 -  1/6.6290105) -0.0098855
31.575341 * exp(0.1506441 -  1/6.6290105) -0.0098855
exp(31.575341 * (0.1506441 -  1/6.6290105)) -0.0098855
1- exp(31.575341 * (0.1506441 -  1/6.6290105)) -0.0098855
1- exp(31.8307433 * (0.149799 -  1/6.6670125)) -0.0095151
plot.develop(,,7)
tidy()
1 -exp((-.00656719)) - .0098855
exp((-.00656719))
tidy()
getwd()
dmodes.f()
dmodes("df")
plot.develop2(,,7)
2
y
dmodes()
rm(om.df,species.o,species,parasite.df,paralysed.df,om2.df,emerge.glm,egg.df,egg2.df,egg3.df,size.pred,size.glmB,size.glmA,size.glm,size.df,sizeA.df,sex.tab,sexRatio.glm,sexRatio.df,sex.df,paralysed.pred,paralysed.glm2)
dmodes()
rm(paralysed.glm,paralysed.fit.df,Paralysed.df,nonhostlong.df,get.pred,emergence.df,emerge.nb2,emerge.nb,adult.df,tab.means,tab.means,nh.long.size.mat,nh.long.diet.mat,long.size,long.fec.lm,long.fec,long.diet,hostlong.df,h.long.diet.mat.p,h.long.diet.mat.mn,examineOut.df,examine.df,preContact.outC.df,examineOutC.df)
dmodes()
rm(new.df,no.df,observe,observeB,observeCpercent.df,two.fish,Adult.df,Emerge.nb,Emergence.df,examineOutD.df,observeD,preContact.outD.df,long.fec2,long.fec2,long.size2,plot.long.size2,long.diet2,examineOutB.df,preContact.df,preContact.outB.dfpreContact.out.df,h.long.diet.mat)
dmodes()
plot.developC()
rm(preContact.out.df,preContact.outB.df,percent.df,observeC,)
rm(preContact.out.df,preContact.outB.df,percent.df,observeC)
dmodes()
tidy()
dmodes()
emerge.glms()
require(MASS)
emerge.glms()
anova(length.aov)
dmodes()
q()
n
head(devel.df)
help.search("cron")
library()
require("sos")
findFn("cron")
anova(length.aov)
head(devel.df)
new.df
len.pred$se.fit
check.fact(devel.df)
library()
help.search("Tukey")
TukeyHSD(length.aov)
find("multcompLetters")
help.search("multcompLetters")
require("multcompView")
search()
dmodes(,2)
multcompLetters(TukeyHSD(length.aov))
TukeyHSD(length.aov)
multcompLetters(TukeyHSD(length.aov, "TempNom"))
multcompLetters(TukeyHSD(length.aov)$TempNom)
multcompLetters(TukeyHSD(length.aov)$TempNom[,4])
multcompLetters4(TukeyHSD(length.aov)$TempNom[,4])
multcompLetters(TukeyHSD(length.aov)$TempNom[,4], compare = ">")
multcompLetters(TukeyHSD(length.aov)$TempNom[,4])$monospacedLetters
multcompLetters(TukeyHSD(length.aov)$TempNom[,4])$monospacedLetters[levels(length.df$TempNom)]
multcompLetters(TukeyHSD(length.aov)$TempNom[,4])$monospacedLetters[levels(length.df$TempNom)]
multcompLetters(TukeyHSD(length.aov)$TempNom[,4], reversed = TRUE)$monospacedLetters[levels(length.df$TempNom)]
dmodes("df")
 head(emerge.df)
ls()
 head(emerge.df)
summary(emerge.df)
ll
0.9791667+ 0.02661915
Q
512 * 
512*16
512*32
dmodes("df")
head(devel.df)
head(adultEmerg.df)
head(adultEmerg.df)
head(adultEmerg.df)
check.fact(adultEmerg.df)
dmodes()
lengthE.df
dmodes()
dmodes("_F")
rm(patt = ls("_F"))
ls("_F")
ls("*_F")
ls(patt = "*_F")
rm(list = ls(patt = "*_F"))
dmodes()
lengthE_C.df
lengthE.df
tidy()
dmodes()
summary(update(lengthE_C.lm, . ~. -TempRecord:Sex))
anova(lm(Length ~ Sex + TempNom + I(TempRecord)^2), data = adultEmerg.df)
head(adultEmerg.df)
anova(lm(Length ~ Sex + TempNom + I(TempRecord)^2, data = adultEmerg.df))
anova(lm(Length ~ Sex + TempRecord + I(TempRecord)^2, data = adultEmerg.df))
anova(lm(Length ~ Sex + TempRecord + I(TempRecord^2), data = adultEmerg.df))
newE_C.df
daysE.df
with(daysE.df, plot(Days ~ TempNom))
with(daysE.df, plot(Days ~ TempNom|Sex))
with(daysE.df, boxplot(Days ~ TempNom|Sex))
with(daysE.df, plot(Days ~ TempNom))
with(daysE.df, plot(1/Days ~ TempNom))
coef(lengthE_C.lm)
coef(update(lengthE_C.lm, . ~. -TempRecord:Sex))
coef(update(lengthE.lm, . ~. -TempRecord:Sex))
plot(update(daysE.lm, . ~. -TempNom:Sex))
plot(update(lengthE.lm, . ~. -TempNom:Sex))
pf(6.1185, df1=1, df2=546, ncp, lower.tail = TRUE, log.p = FALSE)
pf(6.1185, df1=1, df2=546, lower.tail = TRUE, log.p = FALSE)
1-pf(6.1185, df1=1, df2=546, lower.tail = TRUE, log.p = FALSE)
summary(update(lengthE.lm, . ~. -TempNom:Sex ))
summary(update(daysE.lm, . ~. -TempNom:Sex ))
emerge.glms()
pchisq(q=12.193, df=5)
1-pchisq(q=12.193, df=5)
1-pchisq(q=12.193/1.668267, df=5)
Q
tidy()
dmodes("new")
lengthD.df
lengthD.df
length.df
lengthE.df
new.df
multcompLetters(TukeyHSD(MlengthE.aov)
)
multcompLetters(TukeyHSD(MlengthE.aov))
TukeyHSD(FlengthE.aov)
new.df
newES.df
FlengthE.df
MlengthE.df
FlengthE.df
TukeyHSD(MdaysE.aov)$TempNom[,4]
citation
citation()
dmodes.f()
dmodes()
tidy()
dmodes()
search()
library(help = "multcompView")
dmodes()
require("multcompView")
search()
monospacedLetters[levels(lengthE.df$TempNom)]
head(FlongNohost.df)
check.fact(FlongNohost.df)
unique(FlongNohost.df$Diet)
Flong.pred
Flong.pred.df
dmodes("df")
rm(Flong.pred.df)
TukeyHSD(Flong.pred)
TukeyHSD(Flong.aov)
TukeyHSD(Flong.aov)
unique(FlongNohost.df$Diet)
rm(Flong.pred.df)
head(FlongHost.df)
rm(diets.df)
exp(FoffNB.pred[[1]])
levels(dietsH.df$Diet)
36.000000*1.212804
36.000000/1.212804
1.666667/1.289061
1.666667*1.289061
check.fact(FlongHost.df)
check.fact(dietsNH.df)
check.fact(dietsNH.df)
check.fact(dietsH.df)
plot(FoffNB.glm)
plot(FlongH.aov)
plot(FoffNB.glm)
plot(FoffNB.glm)
plot(FlongH.aov)
plot(FoffNB.glm)
head(offspringNo.df)
check.fact(offspringNo.df)
methods(sort)
methods("sort")
df.sort(dietsOff.df, 1:3)
df.sort(dietsOff.df, 3:1)
tidy()
head(dietsOff.df)
dmodes("pred")
names(TukeyHSD(OffDev.aov))
(TukeyHSD(OffDev.aov))$Sex
(TukeyHSD(OffDev.aov))$Virgin
(TukeyHSD(OffDev.aov))$Diet
(TukeyHSD(OffDev.aov))$Diet
(TukeyHSD(OffDev.aov))
names(TukeyHSD(OffDev.aov))
df.sort(dietsOff.df, 3:1)
citation()
citation()
rm(offspringDeeM.df)
with(offspringDevM.df, table(Sex))
with(offspringDevV.df, table(Sex))
dietsOff.df
dietsOff.df[dietsOff.df$Virgin == "Virgin".]
dietsOff.df[dietsOff.df$Virgin == "Virgin",]
dietsOff.df[dietsOff.df$Virgin != "Virgin",]
OffDev.predM.df
aa
as.matrix(aa)
rm(aa)
summary(OffDevV.aov)
plot(OffDevV.aov)
bwplot(Diet ~ Size | Virgin + Sex, data = offspringNo.df)
gems("")
gems("",22)
version()
version
rm(x11c)
wipe(x11c)
bwplot(Diet ~ Longevity, data = Mlong.df)
head(FlongNohost.df)
with(FlongNohost.df, table(Virgin))
dim(FlongNohost.df)
dim(FlongHost.df)
with(FlongHost.df, table(Virgin))
head(Mlong.df)
lookseePlots()
lookseePlots()
lookseePlots()
lookseePlots()
lookseePlots()
dmodes()
dmodes("Pik")
ls(patt = "Pik")
rm(list = ls(patt = "Pik"))
dmodes("Pik")
dmodes()
tidy()
lookseePlots()
lookseePlots()
parasitised.df <- read.delim("/home/hrapgc/Rstuff/Bioprotection/asha/mastrus/paper/Parasitised.txt")
head(parasitised.df)
head(parasitised.df)
head(parasitised.df)
sapply(parasitised.df, sum)
sapply(parasitised.df, sum, na.rm = TRUE)
sapply(parasitised.df, max, na.rm = TRUE)
require(datasets)
iris[, 3:4]
head(parasitised.df2)
head(parasitised.df1)
tail(parasitised.df1)
check.fact(parasitised.df1)
check.fact(parasitised.df1)
count.nas(parasitised.df1)
offspring.df
names(parasitised.df)
levels(parasitised.df1$variable)
lookseePlots()
lookseePlots()
lookseePlots()
lookseePlots()
sapply(parasitised.df, max, na.rm = TRUE)
sapply(parasitised.df, sum, na.rm = TRUE)
lookseePlots()
lookseePlots()
lookseePlots()
lookseePlots()
lookseePlots()
names(dailyOff)
ditch("Day", dailyOff)
lookseePlots()
tail(combined.df)
tail(combined.df)
check.fact(combined.df)
levels(combined.df$Hosts)
lookseePlots()
lookseePlots()
rm(pikComb3)
lookseePlots()
lookseePlots()
check.fact(combined.df)
bwplot(Diet ~  Fecundity| Hosts + Virgin, data = combined.df)
tidy()
dietsOff.dfM
head(FlongHost.df)
check.fact(FlongHost.df)
tidy()
summary(aov(Development ~ Diet + Sex, data = offspringDevM.df))
summary(aov(Development ~ Diet * Sex, data = offspringDevM.df))
tidy()
head(offspringNo.df)
names(offspringDevV.df)
aggregate(Size ~ Diet, data = offspringDevV.df, FUN = mean)
aggregate(Size ~ Diet, data = offspringDevV.df, FUN = sem)
head(offspringDevM.df)
tidy()
dmodes(,,13)
help.search("heatmap")
2.015 * sqrt(20
2.015 * sqrt(2)
2.571 * sqrt(2)
2.228 * sqrt(2)
1.812 * sqrt(2)
comment(fish)
save.new(fish)
fish(138, 138, 31, 46)
fish(c(138, 138, 31, 46))
fish(c(138, 138, 46, 31))
prop.test(x=31, n=138, p = 46/131, alternative = c("two.sided", "less",
    "greater"), conf.level = 0.95, correct = TRUE)
prop.test(x=31, n=138, p = 46/138, alternative = c("two.sided", "less",
    "greater"), conf.level = 0.95, correct = TRUE)
prop.test(x=31, n=138, p = 46/138, alternative = c("less",
    "greater"), conf.level = 0.95, correct = TRUE)
prop.test(x=31, n=138, p = 46/138, alternative = "less", conf.level = 0.95, correct = TRUE)
prop.test(x=31, n=138, p = 46/138, alternative = "g", conf.level = 0.95, correct = TRUE)
getwd()
dmodes()
dmodes.f()
options()$digits
D(T) = 0.0026938T - 0.018693
junk.df
names(junk.df) <- 1:5
junk.df
dimnames(junk.df)
junk.df[, "4"]
junk.df[, 4]
names(junk.df) <- 5:1
rm(junk.df)
plus(junk.df)
as.name("1")
as.name("ggg")
as.name(junk.df)
getwd()
today()
dmodes.f()
plot.developC2(post = FALSE)
find("arrange")
junkFn <- plot.developC2
junkFn()
summary(rate.nlsF)
search()
dmodes(,2)
nlxb
q()
n
junkFn <- plot.developC2
nlxb
require(nlmrt)
q()
n
dmodes()
dmodes.f()
plot.developC(post = FALSE)
plot.developC2(post = FALSE)
traceback()
search()
q()
n
dmodes()
dmodes.f()
dmodes("df")
dmodes("d*df")
head(devel.df)
search()
dim(devel.df)
summary(devel.df)
require(nlmrt)
summary(devel.df)
library(help = "nlmrt")
require(nlmrt)
search()
library(help = "nlmrt")
require(knitr)
knit("/home/hrapgc/Rstuff/Bioprotection/asha/mastrus/paper/nlmrt-vignette.Rnw")
help.search("Rvmmin")
require("sos")
findFn("Rvmmin")
install.packages("Rvmmin")
knit("/home/hrapgc/Rstuff/Bioprotection/asha/mastrus/paper/nlmrt-vignette.Rnw")
findFn("Rcgmin")
install.packages("Rcgmin")
install.packages("Rcgmin", depend = TRUE)
knit("/home/hrapgc/Rstuff/Bioprotection/asha/mastrus/paper/nlmrt-vignette.Rnw")
install.packages("Sweave", depend = TRUE)
install.packages("odfSweave", depend = TRUE)
install.packages("odfWeave", depend = TRUE)
knit("/home/hrapgc/Rstuff/Bioprotection/asha/mastrus/paper/nlmrt-vignette.Rnw")
dmodes.f()
dmodes("df")
head(devel.df)
traceback()
ls()
Tmax
Q
plot.developC2(post = FALSE) 
plot.developC2(post = FALSE) 
plot.developC2_N(post = FALSE) 
c
plot.developA(post = FALSE) 
plot.developA(devel14.df, post = FALSE) 
plot.developA_N <- plot.developA
plot.developA_N(post = FALSE
)
traceback()
plot.developA_N(post = FALSE)
c
wipe(plot.developC2)
plot.developB2(post = FALSE)
c
traceback()
plot.developB(post = FALSE)
plot.developB(post = FALSE)
ls()
rate.nlsM$coeffs
rate.nlsM$coeff
Q
plot.developB(post = FALSE)
c
c
plot.developB(devel14.df, post = FALSE)
traceback()
plot.developB_N <- plot.developB
plot.developB_N(devel14.df, post = FALSE)
find("length.lm")
Q
summary(length.lm)
plot.developB_N(devel14.df, post = FALSE)
c
plot.developB_N(devel14.df, post = FALSE)
c
c
c
plot.developA(devel14.df, post = FALSE)
plot.developB_N(devel14.df, post = FALSE)
plot.developB_N(devel14.df)
dmodes(,,14)
dmodes(,,114)
q()
n
dmodes(,,14)
dmodes(,,14)
 plot.developB_N(devel14.df) ## > Non-linearFitB_N.pdf
 plot.developB_N(devel14.df) ## > Non-linearFitB_N.pdf
 plot.developB_N(devel14.df, post = FALSE) ## > Non-linearFitB_N.pdf
 plot.developB_N(devel14.df, post = FALSE) ## > Non-linearFitB_N.pdf
 plot.developB_N(devel14.df, post = FALSE)
rate.nlsM$coeff
rate.nlsM$coeff
rate.nlsM$coeff
rate.nlsM$coeff
rate.nlsMF$coeff
rate.nlsF$coeff
Q
 plot.developB_N(devel14.df, post = FALSE)
c
 plot.developB_N(devel14.df, post = FALSE)
c
range(newdat$T)
rate.nlsF$coeff
rate.nlsM$coeff
Q
 plot.developB_N(devel14.df, post = FALSE)
c
c
 plot.developB_N(devel14.df, post = TRUE)
c
c
 plot.developB_N(devel14.df, post = FALSE)
c
 plot.developB_N(devel14.df, post = FALSE)
 plot.developB_N(devel14.df, post = TRUE)
 plot.developB_N(devel14.df, post = FALSE)
 plot.developB_N(devel14.df, post = TRUE)
 plot.developB_N(devel14.df, post = TRUE)
dmodes(,,12)
tidy()
 plot.developC_N(devel14.df, post = FALSE)
 plot.developC2N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = FALSE)
c
c
 plot.developC2_N(devel14.df, post = FALSE)
c
c
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = FALSE)
T
Th
head(use.df)
Q
 plot.developC2_N(devel14.df, post = FALSE)
dim(use.df)
tail(use.df)
head(use.df)
Q
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = TRUE)
 plot.developC2_N(devel14.df, post = FALSE)
 plot.developC2_N(devel14.df, post = TRUE)
tidy()
plot.developC2_Na()
plot.developC2_Na(post = FALSE)
plot.developC2_Na(hilin = 22, post = FALSE)
plot.developC2_Na(post = FALSE)
plot.developC2_Na(hilin = 22, post = FALSE)
plot.developC2_Na(post = FALSE)
plot.developC2_Na(post = FALSE)
plot.developC2_Na(hilin = 22, post = FALSE)
dmodes(,,8)
tidy()
unique(devel14.df[, c("TempNom", "Sex")])


summary(devel.df)
summary(devel14.df)
str(devel14.df)
str(devel.df)
new.df14
new14.df
require(ggplot2)
qplot(Days, TempNom, devel14.df, geom =  "boxplot")
qplot(Days, TempNom, data = devel14.df, geom =  "boxplot")
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot")
last_plot()
last_plot() + coord_flip()
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot")
last_plot() + coord_flip()
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot")
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot", facets = Sex)
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot", facets = Sex ~ .)
last_plot() + coord_flip()
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot", facets = Sex ~ .)
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot", facets = . ~  Sex)
last_plot() + coord_flip()
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot", facets = . ~  Sex)
qplot(TempNom, Days, data = devel14.df, geom =  "boxplot", facets = Sex ~ .)
last_plot() + coord_flip()
new14.df
new.df
options()$digits
options(digits = 7)
summary(length.lm)
anova(length.lm)
anova(length.lm)
anova(lengthD.lm)
length.lm
length.aov
lengthD14.aov
summary(lengthD14.aov)
lengthD.df
lm(Length~ TempNom + Sex, data = devel14.df)
lm(Length~ TempNom + Sex, data = devel.df)
summary(lengthD14.aov)
summary(lengthD.aov)
anova(update(days.lm14, . ~. -TempNom:Sex)) # no interaction
anova(update(days.lm, . ~. -TempNom:Sex)) # no interaction
head(devel14.df)
 names(multcompLetters(TukeyHSD(lengthD14.aov)$TempNom[,4]))
multcompLetters(TukeyHSD(lengthD14.aov)$TempNom[,4])$
monospacedLetters
lengthD14.df[with(lengthD14.df, Sex == "M"),]
lengthD14.df[with(lengthD14.df, Sex == "F"),]
search()
dmodes(, 2)
lengthD14.dfM
lengthD14.dfF
multcompLetters(TukeyHSD(lengthD14.aovF)$TempNom[,4])$monospacedLetters
multcompLetters(TukeyHSD(lengthD14.aov)$TempNom[,4])$monospacedLetters
multcompLetters(TukeyHSD(lengthD14.aov)$TempNom[,4], reversed=TRUE)$monospacedLetters
multcompLetters(TukeyHSD(lengthD14.aov)$TempNom[,4])$monospacedLetters
multcompLetters(TukeyHSD(lengthD14.aov)$TempNom[,4], reversed=TRUE)$monospacedLetters
lengthD14.df
ggsave("Lengths.pdf")
ggsave("Lengths.pdf", width = 190, height = 199, units = "mm")
ggsave("Lengths.pdf", width = 190, height = 199, units = "mm")
multcompLetters(TukeyHSD(lengthD14.aov)$TempNom[,4])
multcompLetters(TukeyHSD(lengthD14.aov))
TukeyHSD(lengthD14.aov)
aaa <- TukeyHSD(lengthD14.aov)
multcompLetters(aaa)
class(aaa)
head(aaa, 14)
head(aaa)
names(aaa)
aaa$Sex
multcompLetters(aaa)
multcompLetters(aaa[["TempNom:Sex"]]
)
aaa[["TempNom:Sex"]]
aaa[["TempNom:Sex"]][,4]
multcompLetters(aaa[["TempNom:Sex"]][,4])
multcompLetters(aaa[["TempNom:Sex"]][,4])$monospacedLetters
lengthD14.df
lengthD14.df
unique(devel14.df[, c(3, 1)])
multcompLetters(TukeyHSD(lengthD14.aovF)$TempNom[,4])
multcompLetters(TukeyHSD(lengthD14.aovM)$TempNom[,4])
TukeyHSD(lengthD14.aovF)
TukeyHSD(lengthD14.aovF)$TempNom
aaa <- TukeyHSD(lengthD14.aovF)$TempNom
aaa[aaa[,4] <.05,]
bbb <- TukeyHSD(lengthD14.aovM)$TempNom
bbb[bbb[,4] <.05,]
rm(aaa, bbb)
tidy()
ls()
4/100*20000*6/52
Q
emerge.glms14()
Q
emerge.glms()
Q
wipe(emerge.glms)
rm(emerge.glms14)
wipe(emerge.glms)
emerge.glms()
ls()
117.55/74
117.55/69
Q
emerge.glms14()
emerge.glms14()
Q
emerge.glms()
  as.data.frame(adult.predQB_F[-3])*100
Q
tidy()
q()
n
q()
n
